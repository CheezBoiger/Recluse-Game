// Copyright (c) 2019 Recluse Project. All rights reserved.
#version 430
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_ARB_compute_shader : enable
#extension GL_GOOGLE_include_directive : enable

#define NO_NORMAL_TANGENT
#include "Common/Globals.glsl"

layout (set = 0, binding = 0) uniform sampler2D loRes;
layout (set = 0, binding = 1, rgba16) uniform image2D hiRes;

layout (push_constant) uniform PushConst {
  ivec4 sz;
} screen;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main()
{
  ivec2 iPixCoord = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
  vec2 tx = (vec2(iPixCoord) / vec2(screen.sz.xy));
  vec3 lo = texture(loRes, tx).rgb;
  vec3 hi = imageLoad(hiRes, iPixCoord).rgb;
  vec4 res = vec4(hi + lo, 1);
  imageStore(hiRes, iPixCoord, res);
}