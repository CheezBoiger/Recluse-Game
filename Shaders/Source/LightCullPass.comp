// Copyright (c) 2017 Recluse Project. All rights reserved.
#version 430
#extension GL_ARB_separate_shader_objects   : enable
#extension GL_ARB_shading_language_420pack  : enable
#extension GL_ARB_compute_shader            : enable


struct PointLight {
  vec4    position;
  vec4    color;
  float   range;
  float   intensity;
  int     enable;
  ivec2   pad;
};


struct LightGridInfo {
  // info.x = offset
  // info.y = count
  vec2 info;
  vec2 pad;
};


#define WORKGROUP_SIZE        1024
#define MAX_LIGHTS            64


layout (set = 0, binding = 2) uniform GlobalBuffer {
  mat4  view;
  mat4  proj;
  mat4  viewProj;
  vec4  cameraPos;
  vec4  l_plane;
  vec4  r_plane;
  vec4  t_plane;
  vec4  b_plane;
  vec4  n_plane;
  vec4  f_plane;
  vec2  mousePos;
  ivec2 screenSize;
  vec4  vSun; // Sundir.xyz and w is brightness.
  float gamma;
  float exposure;
  float fRayleigh;
  float fMie;
  float fMieDist;
  float fScatterStrength;
  float fRayleighStength;
  float fMieStength;
  float fIntensity;
  int   bloomEnabled;
  int   enableShadows;
  int   enableAA;
} gWorldBuffer;





// Light indices map.
layout (set = 1, binding = 1) buffer LightIndices {
  vec4 light_indices[];
  vec4 envmap_indices[];
};

// The Light lookup table, for use in calculations.
layout (set = 3, binding = 0) uniform LightBuffer {
  DirectionLight  primaryLight;
  DirectionLight  directionLights[MAX_DIRECTION_LIGHTS];
  PointLight      pointLights[MAX_POINT_LIGHTS];
} gLightBuffer;


// Depth map from the previous frame.
layout (set = 1, binding = 3) uniform sampler2D depth;


layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 64) in;


void main()
{
  ivec2 tex_coord = gWorldBuffer.screenSize;
  float Depth = texture(depth, tex_coord).r;
  
}