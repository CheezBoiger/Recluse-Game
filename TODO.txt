Vulkan:
  Need to set up Rebuilding of Swapchain and framebuffers, as well as cmdbuffers if window resizes.

  Dynamic uniform buffers or uniform buffers? We will just be creating a bunch of descriptor
  sets for our material textures, so we will stick with classic uniform buffers.
Renderer:

  Start defining upper level CmdList, which is what the scene graph will degrade to. For
  CmdList extraction, we will be reading and loading onto gpu friendly commandbuffers. This
  needs to be multithreaded.

  Light definitions are needed. Light probes needed, implementing spherical harmonics.
  Need to design material, will be holding uniformbuffers and textures for our pbr renderer.
  Need to define our skybox and day/night cycles. This will require a separate pipeline
  RenderPass.

  Current Rendering Pipeline:
  Rendering Technique: Clustered Forward (deferred if we are adding gbuffers, optional).
    - Pre process: Light Culling process.
      Input: 
      Output: light grid shader storage buffer.
    - Process: Clustered Forward PBR Rendering 
      Input: (Any gbuffers needed?)
              lightGrid shader storage buffer.
      Output: 1 RenderTexture
    - Post Process: 
      Input: 1 RenderTexture
        Add bloom and HDR effects onto scene texture.
        UI overlay pass, render on top of scene the UI, use Blending!
      Output: FinalTexture 